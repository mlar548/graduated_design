<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.gys.dao.UsersMapper" >
  <resultMap id="BaseResultMap" type="com.gys.entity.Users" >
    <id column="user_id" property="userId" jdbcType="INTEGER" />
    <result column="username" property="username" jdbcType="VARCHAR" />
    <result column="password" property="password" jdbcType="VARCHAR" />
    <result column="user_phone" property="userPhone" jdbcType="VARCHAR" />
    <result column="sex" property="sex" jdbcType="VARCHAR" />
    <result column="birthday" property="birthday" jdbcType="DATE" />
    <result column="user_photo" property="userPhoto" jdbcType="VARCHAR" />
    <result column="user_email" property="userEmail" jdbcType="VARCHAR" />
    <result column="user_qq" property="userQq" jdbcType="VARCHAR" />
    <result column="password_salt" property="passwordSalt" jdbcType="VARCHAR" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
    <result column="last_login_time" property="lastLoginTime" jdbcType="TIMESTAMP" />
    
    <collection property="addressList" column="user_id"
     select="com.gys.dao.AddressMapper.selectByUserId"/>
    
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    user_id, username, password, user_phone, sex, birthday, user_photo, user_email, user_qq, 
    password_salt, name, create_time, update_time, last_login_time
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.gys.entity.UsersExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    'false' as QUERYID,
    <include refid="Base_Column_List" />
    from users
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from users
    where user_id = #{userId,jdbcType=INTEGER}
  </select>
  <!-- 查找用户 -->
  <select id="selectUsersByRoleId" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
  SELECT users.*
FROM  users ,user_roles 
where   users.user_id=user_roles.user_id and role_id=#{roleId,jdbcType=INTEGER}
  </select>
 
  <select id="selectUserByUserName" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from users
    where username = #{username,jdbcType=VARCHAR} 
  </select>
    <!-- 登录  -->
   <select id="login" resultMap="BaseResultMap"  >
    select 
    <include refid="Base_Column_List" />
    from users
    where username = #{username,jdbcType=VARCHAR} and password = #{password,jdbcType=VARCHAR}
  </select>
  
  
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from users
    where user_id = #{userId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.gys.entity.Users" >
    insert into users (user_id, username, password, 
      user_phone, sex, birthday, 
      user_photo, user_email, user_qq, 
      password_salt, name, create_time, 
      update_time, last_login_time)
    values (#{userId,jdbcType=INTEGER}, #{username,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, 
      #{userPhone,jdbcType=VARCHAR}, #{sex,jdbcType=VARCHAR}, #{birthday,jdbcType=DATE}, 
      #{userPhoto,jdbcType=VARCHAR}, #{userEmail,jdbcType=VARCHAR}, #{userQq,jdbcType=VARCHAR}, 
      #{passwordSalt,jdbcType=VARCHAR}, #{name,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, 
      #{updateTime,jdbcType=TIMESTAMP}, #{lastLoginTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.gys.entity.Users" keyProperty="userId"
			useGeneratedKeys="true">
    insert into users
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="userId != null" >
        user_id,
      </if>
      <if test="username != null" >
        username,
      </if>
      <if test="password != null" >
        password,
      </if>
      <if test="userPhone != null" >
        user_phone,
      </if>
      <if test="sex != null" >
        sex,
      </if>
      <if test="birthday != null" >
        birthday,
      </if>
      <if test="userPhoto != null" >
        user_photo,
      </if>
      <if test="userEmail != null" >
        user_email,
      </if>
      <if test="userQq != null" >
        user_qq,
      </if>
      <if test="passwordSalt != null" >
        password_salt,
      </if>
      <if test="name != null" >
        name,
      </if>
      <if test="createTime == null" >
        create_time,
      </if>
      <if test="updateTime != null" >
        update_time,
      </if>
      <if test="lastLoginTime != null" >
        last_login_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="userId != null" >
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="username != null" >
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="userPhone != null" >
        #{userPhone,jdbcType=VARCHAR},
      </if>
      <if test="sex != null" >
        #{sex,jdbcType=VARCHAR},
      </if>
      <if test="birthday != null" >
        #{birthday,jdbcType=DATE},
      </if>
      <if test="userPhoto != null" >
        #{userPhoto,jdbcType=VARCHAR},
      </if>
      <if test="userEmail != null" >
        #{userEmail,jdbcType=VARCHAR},
      </if>
      <if test="userQq != null" >
        #{userQq,jdbcType=VARCHAR},
      </if>
      <if test="passwordSalt != null" >
        #{passwordSalt,jdbcType=VARCHAR},
      </if>
      <if test="name != null" >
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="createTime == null" >
        now(),
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="lastLoginTime != null" >
        #{lastLoginTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.gys.entity.Users" >
    update users
    <set >
      <if test="username != null" >
        username = #{username,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="userPhone != null" >
        user_phone = #{userPhone,jdbcType=VARCHAR},
      </if>
      <if test="sex != null" >
        sex = #{sex,jdbcType=VARCHAR},
      </if>
      <if test="birthday != null" >
        birthday = #{birthday,jdbcType=DATE},
      </if>
      <if test="userPhoto != null" >
        user_photo = #{userPhoto,jdbcType=VARCHAR},
      </if>
      <if test="userEmail != null" >
        user_email = #{userEmail,jdbcType=VARCHAR},
      </if>
      <if test="userQq != null" >
        user_qq = #{userQq,jdbcType=VARCHAR},
      </if>
      <if test="passwordSalt != null" >
        password_salt = #{passwordSalt,jdbcType=VARCHAR},
      </if>
      <if test="name != null" >
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="lastLoginTime != null" >
        last_login_time = #{lastLoginTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where user_id = #{userId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.gys.entity.Users" >
    update users
    set username = #{username,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      user_phone = #{userPhone,jdbcType=VARCHAR},
      sex = #{sex,jdbcType=VARCHAR},
      birthday = #{birthday,jdbcType=DATE},
      user_photo = #{userPhoto,jdbcType=VARCHAR},
      user_email = #{userEmail,jdbcType=VARCHAR},
      user_qq = #{userQq,jdbcType=VARCHAR},
      password_salt = #{passwordSalt,jdbcType=VARCHAR},
      name = #{name,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      last_login_time = #{lastLoginTime,jdbcType=TIMESTAMP}
    where user_id = #{userId,jdbcType=INTEGER}
  </update>
  
  <!-- 分页 -->
  <!-- 分页查询所有用户信息-->
  <select id="selectUsersByRoleIdPage" resultMap="BaseResultMap"   >
  SELECT *
FROM  users ,user_roles 
where   users.user_id=user_roles.user_id and role_id=#{roleId,jdbcType=INTEGER}
    limit #{pageNo,jdbcType=INTEGER},#{pageSize,jdbcType=INTEGER}
  </select>
  <!-- 查询所有用户数量 -->
  <select id="getUserByRoleIdis2AllCount" resultType="java.lang.Integer">
  SELECT count(*) FROM  users ,user_roles 
where   users.user_id=user_roles.user_id and role_id=#{roleId,jdbcType=INTEGER}
  </select>
  <!-- 分页结束 -->
   
</mapper>