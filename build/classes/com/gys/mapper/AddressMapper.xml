<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.gys.dao.AddressMapper" >
  <resultMap id="BaseResultMap" type="com.gys.entity.Address" >
    <id column="address_id" property="addressId" jdbcType="INTEGER" />
    <result column="province" property="province" jdbcType="VARCHAR" />
    <result column="city" property="city" jdbcType="VARCHAR" />
    <result column="alladdress" property="alladdress" jdbcType="VARCHAR" />
    <result column="user_id" property="userId" jdbcType="INTEGER" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="phone" property="phone" jdbcType="VARCHAR" />
    <result column="postal_code" property="postalCode" jdbcType="VARCHAR" />
    <result column="tel" property="tel" jdbcType="VARCHAR" />
     <result column="zt" property="zt" jdbcType="INTEGER" />
    <result column="other" property="other" jdbcType="VARCHAR" />
    
 
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    address_id, province, city, alladdress, user_id, name, phone, postal_code, tel, zt, 
    other
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.gys.entity.AddressExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    'false' as QUERYID,
    <include refid="Base_Column_List" />
    from address
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByUserId" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from address
    where user_id = #{userId}
  </select>
   
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from address
    where address_id = #{addressId,jdbcType=INTEGER}
  </select>
   
   
<!--  查询该用户所有地址  -->
  <select id="selectAddressByUserId" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from address
    where user_id = #{userId,jdbcType=INTEGER} 
    
  </select>
  
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from address
    where address_id = #{addressId,jdbcType=INTEGER}
  </delete>
  
   
   
  
  <!-- 添加收货地址 -->
  <insert id="addAddress" parameterType="com.gys.entity.Address" >
    insert into address (  province, city, 
      alladdress, user_id)
    values (  #{province,jdbcType=VARCHAR}, #{city,jdbcType=VARCHAR}, 
      #{alladdress,jdbcType=VARCHAR}, #{userId,jdbcType=INTEGER})
  </insert>
  
   
   
  
  <!-- 修改 -->
  <update id="updateAddress" parameterType="com.gys.entity.Address" >
    update address
    set province = #{province,jdbcType=VARCHAR},
      city = #{city,jdbcType=VARCHAR},
      alladdress = #{alladdress,jdbcType=VARCHAR}  
    where address_id = #{addressId,jdbcType=INTEGER}
  </update>
  
 <insert id="insert" parameterType="com.gys.entity.Address" >
    insert into address (address_id, province, city, 
      alladdress, user_id, name, 
      phone, postal_code, tel, 
      zt, other)
    values (#{addressId,jdbcType=INTEGER}, #{province,jdbcType=VARCHAR}, #{city,jdbcType=VARCHAR}, 
      #{alladdress,jdbcType=VARCHAR}, #{userId,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, 
      #{phone,jdbcType=VARCHAR}, #{postalCode,jdbcType=VARCHAR}, #{tel,jdbcType=VARCHAR}, 
      #{zt,jdbcType=INTEGER}, #{other,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.gys.entity.Address" >
    insert into address
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="addressId != null" >
        address_id,
      </if>
      <if test="province != null" >
        province,
      </if>
      <if test="city != null" >
        city,
      </if>
      <if test="alladdress != null" >
        alladdress,
      </if>
      <if test="userId != null" >
        user_id,
      </if>
      <if test="name != null" >
        name,
      </if>
      <if test="phone != null" >
        phone,
      </if>
      <if test="postalCode != null" >
        postal_code,
      </if>
      <if test="tel != null" >
        tel,
      </if>
      <if test="zt != null" >
        zt,
      </if>
      <if test="other != null" >
        other,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="addressId != null" >
        #{addressId,jdbcType=INTEGER},
      </if>
      <if test="province != null" >
        #{province,jdbcType=VARCHAR},
      </if>
      <if test="city != null" >
        #{city,jdbcType=VARCHAR},
      </if>
      <if test="alladdress != null" >
        #{alladdress,jdbcType=VARCHAR},
      </if>
      <if test="userId != null" >
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="name != null" >
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="phone != null" >
        #{phone,jdbcType=VARCHAR},
      </if>
      <if test="postalCode != null" >
        #{postalCode,jdbcType=VARCHAR},
      </if>
      <if test="tel != null" >
        #{tel,jdbcType=VARCHAR},
      </if>
      <if test="zt != null" >
        #{zt,jdbcType=INTEGER},
      </if>
      <if test="other != null" >
        #{other,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.gys.entity.Address" >
    update address
    <set >
      <if test="province != null" >
        province = #{province,jdbcType=VARCHAR},
      </if>
      <if test="city != null" >
        city = #{city,jdbcType=VARCHAR},
      </if>
      <if test="alladdress != null" >
        alladdress = #{alladdress,jdbcType=VARCHAR},
      </if>
      <if test="userId != null" >
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="name != null" >
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="phone != null" >
        phone = #{phone,jdbcType=VARCHAR},
      </if>
      <if test="postalCode != null" >
        postal_code = #{postalCode,jdbcType=VARCHAR},
      </if>
      <if test="tel != null" >
        tel = #{tel,jdbcType=VARCHAR},
      </if>
      <if test="zt != null" >
        zt = #{zt,jdbcType=INTEGER},
      </if>
      <if test="other != null" >
        other = #{other,jdbcType=VARCHAR},
      </if>
    </set>
    where address_id = #{addressId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.gys.entity.Address" >
    update address
    set province = #{province,jdbcType=VARCHAR},
      city = #{city,jdbcType=VARCHAR},
      alladdress = #{alladdress,jdbcType=VARCHAR},
      user_id = #{userId,jdbcType=INTEGER},
      name = #{name,jdbcType=VARCHAR},
      phone = #{phone,jdbcType=VARCHAR},
      postal_code = #{postalCode,jdbcType=VARCHAR},
      tel = #{tel,jdbcType=VARCHAR},
      zt = #{zt,jdbcType=INTEGER},
      other = #{other,jdbcType=VARCHAR}
    where address_id = #{addressId,jdbcType=INTEGER}
  </update>
</mapper>