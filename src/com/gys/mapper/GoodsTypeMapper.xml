<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.gys.dao.GoodsTypeMapper" >
  <resultMap id="BaseResultMap" type="com.gys.entity.GoodsType" >
    <id column="goods_type_id" property="goodsTypeId" jdbcType="INTEGER" />
    <result column="goods_type_name" property="goodsTypeName" jdbcType="VARCHAR" />
    
     
<collection property="gtGoodsList" column="goods_type_id" select="com.gys.dao.GoodsTypeMapper.findGoodsList"/>
			  
 
  </resultMap>
  
  <resultMap id="goodsResultMap" type="com.gys.entity.Goods" >
  <id column="goods_id" property="goodsId" jdbcType="INTEGER" />
    <result column="goods_name" property="goodsName" jdbcType="VARCHAR" />
    <result column="goods_type_id" property="goodsTypeId" jdbcType="INTEGER" />
    <result column="supplier_id" property="supplierId" jdbcType="INTEGER" />
    <result column="title" property="title" jdbcType="VARCHAR" />
    <result column="goods_photo" property="goodsPhoto" jdbcType="VARCHAR" />
    <result column="price" property="price" jdbcType="DECIMAL" />
    <result column="beforeprice" property="beforeprice" jdbcType="DECIMAL" />
    <result column="unit" property="unit" jdbcType="VARCHAR" />
    <result column="remain" property="remain" jdbcType="INTEGER" />
    <result column="introduce" property="introduce" jdbcType="VARCHAR" />
    <result column="goods_capacity" property="goodsCapacity" jdbcType="INTEGER" />
     <result column="least_num" property="leastNum" jdbcType="INTEGER" />
    <result column="second_num" property="secondNum" jdbcType="INTEGER" />
    <result column="second_price" property="secondPrice" jdbcType="DECIMAL" />
    <result column="third_num" property="thirdNum" jdbcType="INTEGER" />
    <result column="third_price" property="thirdPrice" jdbcType="DECIMAL" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    goods_type_id, goods_type_name
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.gys.entity.GoodsTypeExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    'false' as QUERYID,
    <include refid="Base_Column_List" />
    from goods_type
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
    
  
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from goods_type
    where goods_type_id = #{goodsTypeId,jdbcType=INTEGER}
  </select>
  <select id="findGoodsList" resultMap="goodsResultMap" parameterType="java.lang.Integer" >
    select 
      *
    from goods
    where goods_type_id = #{goodsTypeId,jdbcType=INTEGER}
  </select>
  
  <!-- 查询所有商品类型 -->
  <select id="selectGoodsType" resultMap="BaseResultMap"   >
    select 
    <include refid="Base_Column_List" />
    from goods_type 
  </select>
  
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from goods_type
    where goods_type_id = #{goodsTypeId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.gys.entity.GoodsType" >
    insert into goods_type (goods_type_id, goods_type_name)
    values (#{goodsTypeId,jdbcType=INTEGER}, #{goodsTypeName,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.gys.entity.GoodsType" >
    insert into goods_type
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="goodsTypeId != null" >
        goods_type_id,
      </if>
      <if test="goodsTypeName != null" >
        goods_type_name,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="goodsTypeId != null" >
        #{goodsTypeId,jdbcType=INTEGER},
      </if>
      <if test="goodsTypeName != null" >
        #{goodsTypeName,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.gys.entity.GoodsType" >
    update goods_type
    <set >
      <if test="goodsTypeName != null" >
        goods_type_name = #{goodsTypeName,jdbcType=VARCHAR},
      </if>
    </set>
    where goods_type_id = #{goodsTypeId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.gys.entity.GoodsType" >
    update goods_type
    set goods_type_name = #{goodsTypeName,jdbcType=VARCHAR}
    where goods_type_id = #{goodsTypeId,jdbcType=INTEGER}
  </update>
</mapper>