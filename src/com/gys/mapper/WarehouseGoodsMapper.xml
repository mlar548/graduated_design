<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.gys.dao.WarehouseGoodsMapper" >
  <resultMap id="BaseResultMap" type="com.gys.entity.WarehouseGoods" >
    <id column="warehouse_goods_id" property="warehouseGoodsId" jdbcType="INTEGER" />
    <result column="goods_id" property="goodsId" jdbcType="INTEGER" />
    <result column="warehouse_id" property="warehouseId" jdbcType="INTEGER" />
    <result column="goods_name" property="goodsName" jdbcType="INTEGER" />
    <result column="used_capacity" property="usedCapacity" jdbcType="INTEGER" />
    <result column="warehouse_goods_quantity" property="warehouseGoodsQuantity" jdbcType="INTEGER" />
  </resultMap>
 <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    warehouse_goods_id, goods_id, warehouse_id, warehouse_goods_quantity
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.gys.entity.WarehouseGoodsExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    'false' as QUERYID,
    <include refid="Base_Column_List" />
    from warehouse_goods
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from warehouse_goods
    where warehouse_goods_id = #{warehouseGoodsId,jdbcType=INTEGER}
  </select>
  <select id="selectByWarehouseId" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from warehouse_goods
    where warehouse_id = #{warehouseId,jdbcType=INTEGER}
  </select>
  
  
  <!-- 当前仓库商品余量： -->
  <select id="selectQuantityByWarehouseIdGoodsId" resultType="java.lang.Integer"   >
    Select warehouse_goods_quantity 
    from  warehouse_goods 
where warehouse_id=#{warehouseId,jdbcType=INTEGER} and  goods_id=#{goodsId,jdbcType=INTEGER}
  </select>
  
  
  
  <!-- 分页查询仓库具体信息 -->
  <select id="selectWarehouseGoodsPage" resultMap="BaseResultMap"   >
    SELECT wg.*,g.goods_name,
g.goods_capacity *wg.warehouse_goods_quantity as used_capacity
FROM goods g,warehouse_goods wg,warehouse w
where g.goods_id=wg.goods_id   and w.warehouse_id=wg.warehouse_id  and wg.warehouse_id=#{warehouseId,jdbcType=INTEGER}
limit #{pageNo,jdbcType=INTEGER},#{pageSize,jdbcType=INTEGER}
  </select>
    
   <!-- 查询所有Warehouse数量 -->
  <select id="getAllCount" resultType="java.lang.Integer">
  SELECT count(*) from warehouse_Goods where warehouse_id=#{warehouseId,jdbcType=INTEGER}  
  </select>
  
  
  <!-- 查询仓库具体信息 -->
  <select id="selectWarehouseGoods" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    SELECT wg.*,g.goods_name,
g.goods_capacity *wg.warehouse_goods_quantity as used_capacity
FROM goods g,warehouse_goods wg,warehouse w
where g.goods_id=wg.goods_id   and w.warehouse_id=wg.warehouse_id  and wg.warehouse_id=#{warehouseId,jdbcType=INTEGER};
  </select>
  
  
  <!-- 查找 GoodsId和WarehouseId-->
  <select id="selectWarehouseGoodsByGoodsIdWarehouseId" resultMap="BaseResultMap"   >
    select 
    <include refid="Base_Column_List" />
    from warehouse_goods
    where goods_id = #{goodsId,jdbcType=INTEGER} and warehouse_id = #{warehouseId,jdbcType=INTEGER}
  </select>
  
  <!-- 通过WarehouseId查找 GoodsName-->
  <select id="selectGoodNameByWarehouseId" resultMap="BaseResultMap"   >
    select warehouse_goods.*,goods.goods_name
     from  warehouse_goods,goods where   warehouse_id = #{warehouseId,jdbcType=INTEGER} 
     and warehouse_goods.goods_id=goods.goods_id
  </select>
  
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from warehouse_goods
    where warehouse_goods_id = #{warehouseGoodsId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.gys.entity.WarehouseGoods" >
    insert into warehouse_goods (warehouse_goods_id, goods_id, warehouse_id, 
      warehouse_goods_quantity)
    values (#{warehouseGoodsId,jdbcType=INTEGER}, #{goodsId,jdbcType=INTEGER}, #{warehouseId,jdbcType=INTEGER}, 
      #{warehouseGoodsQuantity,jdbcType=INTEGER})
  </insert>
  
  <!-- 插入 -->
  <insert id="insertNew" parameterType="com.gys.entity.WarehouseGoods" >
    insert into warehouse_goods (  goods_id, warehouse_id, 
      warehouse_goods_quantity)
    values (  #{goodsId,jdbcType=INTEGER}, #{warehouseId,jdbcType=INTEGER}, 
      0)
  </insert>
  <insert id="insertSelective" parameterType="com.gys.entity.WarehouseGoods" >
    insert into warehouse_goods
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="warehouseGoodsId != null" >
        warehouse_goods_id,
      </if>
      <if test="goodsId != null" >
        goods_id,
      </if>
      <if test="warehouseId != null" >
        warehouse_id,
      </if>
      <if test="warehouseGoodsQuantity != null" >
        warehouse_goods_quantity,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="warehouseGoodsId != null" >
        #{warehouseGoodsId,jdbcType=INTEGER},
      </if>
      <if test="goodsId != null" >
        #{goodsId,jdbcType=INTEGER},
      </if>
      <if test="warehouseId != null" >
        #{warehouseId,jdbcType=INTEGER},
      </if>
      <if test="warehouseGoodsQuantity != null" >
        #{warehouseGoodsQuantity,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.gys.entity.WarehouseGoods" >
    update warehouse_goods
    <set >
      <if test="goodsId != null" >
        goods_id = #{goodsId,jdbcType=INTEGER},
      </if>
      <if test="warehouseId != null" >
        warehouse_id = #{warehouseId,jdbcType=INTEGER},
      </if>
      <if test="warehouseGoodsQuantity != null" >
        warehouse_goods_quantity = #{warehouseGoodsQuantity,jdbcType=INTEGER},
      </if>
    </set>
    where warehouse_goods_id = #{warehouseGoodsId,jdbcType=INTEGER}
  </update>
  
  <!-- 改数量，被调拨的数量减少 -->
  <update id="updateFromWarehouseGoods"   >
     UPDATE warehouse_goods
      set warehouse_goods_quantity=warehouse_goods_quantity-#{warehouseGoodsQuantity,jdbcType=INTEGER} 
     WHERE warehouse_id = #{warehouseId,jdbcType=INTEGER} and goods_id = #{goodsId,jdbcType=INTEGER}
  </update>
  
  <!-- 改数量，被调拨的数量减少 -->
  <update id="updateUpWarehouseGoods"   >
     UPDATE warehouse_goods
      set warehouse_goods_quantity=warehouse_goods_quantity+#{warehouseGoodsQuantity,jdbcType=INTEGER} 
     WHERE warehouse_id = #{warehouseId,jdbcType=INTEGER} and goods_id = #{goodsId,jdbcType=INTEGER}
  </update>
  
  
  <update id="updateByPrimaryKey" parameterType="com.gys.entity.WarehouseGoods" >
    update warehouse_goods
    set goods_id = #{goodsId,jdbcType=INTEGER},
      warehouse_id = #{warehouseId,jdbcType=INTEGER},
      warehouse_goods_quantity = #{warehouseGoodsQuantity,jdbcType=INTEGER}
    where warehouse_goods_id = #{warehouseGoodsId,jdbcType=INTEGER}
  </update>
</mapper>