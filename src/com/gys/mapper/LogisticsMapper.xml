<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.gys.dao.LogisticsMapper" >
  <resultMap id="BaseResultMap" type="com.gys.entity.Logistics" >
    <id column="logistics_id" property="logisticsId" jdbcType="INTEGER" />
    <result column="logistics_name" property="logisticsName" jdbcType="VARCHAR" />
    <result column="logistics_time" property="logisticsTime" jdbcType="TIMESTAMP" />
    <result column="order_id" property="orderId" jdbcType="VARCHAR" />
    <result column="purchase_id" property="purchaseId" jdbcType="VARCHAR" />
    <result column="from_warehouse_id" property="fromWarehouseId" jdbcType="INTEGER" />
    <result column="to_warehouse_id" property="toWarehouseId" jdbcType="INTEGER" />
    <result column="status" property="status" jdbcType="INTEGER" />
    <result column="otid" property="otid" jdbcType="VARCHAR" />
  <result column="type" property="type" jdbcType="INTEGER" />
  
     <result column="user_id" property="userId" jdbcType="INTEGER" />
     <result column="goods_name" property="goodsName" jdbcType="VARCHAR" />
    <result column="purchase_quantity" property="purchaseQuantity" jdbcType="INTEGER" />
  </resultMap>
   <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    logistics_id, logistics_name, logistics_time, order_id, purchase_id, from_warehouse_id, 
    to_warehouse_id, status, otid, type
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.gys.entity.LogisticsExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    'false' as QUERYID,
    <include refid="Base_Column_List" />
    from logistics
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from logistics
    where logistics_id = #{logisticsId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from logistics
    where logistics_id = #{logisticsId,jdbcType=INTEGER}
  </delete>
  
  <insert id="insert" parameterType="com.gys.entity.Logistics" >
    insert into logistics (logistics_id, logistics_name, logistics_time, 
      order_id, purchase_id, from_warehouse_id, 
      to_warehouse_id, status, otid, 
      type)
    values (#{logisticsId,jdbcType=INTEGER}, #{logisticsName,jdbcType=VARCHAR}, #{logisticsTime,jdbcType=TIMESTAMP}, 
      #{orderId,jdbcType=VARCHAR}, #{purchaseId,jdbcType=VARCHAR}, #{fromWarehouseId,jdbcType=INTEGER}, 
      #{toWarehouseId,jdbcType=INTEGER}, #{status,jdbcType=INTEGER}, #{otid,jdbcType=VARCHAR}, 
      #{type,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.gys.entity.Logistics" keyProperty="logisticsId"
			useGeneratedKeys="true">
    insert into logistics
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="logisticsId != null" >
        logistics_id,
      </if>
      <if test="logisticsName != null" >
        logistics_name,
      </if>
      <if test="logisticsTime == null" >
        logistics_time,
      </if>
      <if test="orderId != null" >
        order_id,
      </if>
      <if test="purchaseId != null" >
        purchase_id,
      </if>
      <if test="fromWarehouseId != null" >
        from_warehouse_id,
      </if>
      <if test="toWarehouseId != null" >
        to_warehouse_id,
      </if>
      <if test="status != null" >
        status,
      </if>
      <if test="otid != null" >
        otid,
      </if>
      <if test="type != null" >
        type,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="logisticsId != null" >
        #{logisticsId,jdbcType=INTEGER},
      </if>
      <if test="logisticsName != null" >
        #{logisticsName,jdbcType=VARCHAR},
      </if>
      <if test="logisticsTime == null" >
        now(),
      </if>
      <if test="orderId != null" >
        #{orderId,jdbcType=VARCHAR},
      </if>
      <if test="purchaseId != null" >
        #{purchaseId,jdbcType=VARCHAR},
      </if>
      <if test="fromWarehouseId != null" >
        #{fromWarehouseId,jdbcType=INTEGER},
      </if>
      <if test="toWarehouseId != null" >
        #{toWarehouseId,jdbcType=INTEGER},
      </if>
      <if test="status != null" >
        #{status,jdbcType=INTEGER},
      </if>
      <if test="otid != null" >
        #{otid,jdbcType=VARCHAR},
      </if>
      <if test="type != null" >
        #{type,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.gys.entity.Logistics" >
    update logistics
    <set >
      <if test="logisticsName != null" >
        logistics_name = #{logisticsName,jdbcType=VARCHAR},
      </if>
      <if test="logisticsTime != null" >
        logistics_time = #{logisticsTime,jdbcType=TIMESTAMP},
      </if>
      <if test="orderId != null" >
        order_id = #{orderId,jdbcType=VARCHAR},
      </if>
      <if test="purchaseId != null" >
        purchase_id = #{purchaseId,jdbcType=VARCHAR},
      </if>
      <if test="fromWarehouseId != null" >
        from_warehouse_id = #{fromWarehouseId,jdbcType=INTEGER},
      </if>
      <if test="toWarehouseId != null" >
        to_warehouse_id = #{toWarehouseId,jdbcType=INTEGER},
      </if>
      <if test="status != null" >
        status = #{status,jdbcType=INTEGER},
      </if>
      <if test="otid != null" >
        otid = #{otid,jdbcType=VARCHAR},
      </if>
      <if test="type != null" >
        type = #{type,jdbcType=INTEGER},
      </if>
    </set>
    where logistics_id = #{logisticsId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.gys.entity.Logistics" >
    update logistics
    set logistics_name = #{logisticsName,jdbcType=VARCHAR},
      logistics_time = #{logisticsTime,jdbcType=TIMESTAMP},
      order_id = #{orderId,jdbcType=VARCHAR},
      purchase_id = #{purchaseId,jdbcType=VARCHAR},
      from_warehouse_id = #{fromWarehouseId,jdbcType=INTEGER},
      to_warehouse_id = #{toWarehouseId,jdbcType=INTEGER},
      status = #{status,jdbcType=INTEGER},
      otid = #{otid,jdbcType=VARCHAR},
      type = #{type,jdbcType=INTEGER}
    where logistics_id = #{logisticsId,jdbcType=INTEGER}
  </update>
  
  
  
  <insert id="insert2" parameterType="com.gys.entity.Logistics" >
    insert into logistics (logistics_id, logistics_name, logistics_time, 
      order_id, purchase_id, from_warehouse_id, 
      to_warehouse_id, status)
    values (#{logisticsId,jdbcType=INTEGER}, #{logisticsName,jdbcType=VARCHAR}, #{logisticsTime,jdbcType=TIMESTAMP}, 
      #{orderId,jdbcType=VARCHAR}, #{purchaseId,jdbcType=VARCHAR}, #{fromWarehouseId,jdbcType=INTEGER}, 
      #{toWarehouseId,jdbcType=INTEGER}, #{status,jdbcType=INTEGER})
  </insert>

  
  <insert id="insertSelective2" parameterType="com.gys.entity.Logistics"  keyProperty="logisticsId"
			useGeneratedKeys="true">
    insert into logistics
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="logisticsId != null" >
        logistics_id,
      </if>
      <if test="logisticsName != null" >
        logistics_name,
      </if>
      <if test="logisticsTime == null" >
        logistics_time,
      </if>
      <if test="orderId != null" >
        order_id,
      </if>
      <if test="purchaseId != null" >
        purchase_id,
      </if>
      <if test="fromWarehouseId != null" >
        from_warehouse_id,
      </if>
      <if test="toWarehouseId != null" >
        to_warehouse_id,
      </if>
      <if test="status == null" >
        status,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="logisticsId != null" >
        #{logisticsId,jdbcType=INTEGER},
      </if>
      <if test="logisticsName != null" >
        #{logisticsName,jdbcType=VARCHAR},
      </if>
      <if test="logisticsTime == null" >
        now(),
      </if>
      <if test="orderId != null" >
        #{orderId,jdbcType=VARCHAR},
      </if>
      <if test="purchaseId != null" >
        #{purchaseId,jdbcType=VARCHAR},
      </if>
      <if test="fromWarehouseId != null" >
        #{fromWarehouseId,jdbcType=INTEGER},
      </if>
      <if test="toWarehouseId != null" >
        #{toWarehouseId,jdbcType=INTEGER},
      </if>
      <if test="status == null" >
        0,
      </if>
    </trim>
  </insert>
  
  
  <!-- 找所有采购物流 -->
  <select id="selectLogisticsForPurchase" resultMap="BaseResultMap"  >
    SELECT logistics.* ,goods_name,purchase_quantity from logistics,purchase,goods WHERE logistics.purchase_id  = purchase.purchase_id and
goods.goods_id=purchase.goods_id  and logistics.status=0
  </select>
  <!-- 找所有调拨物流 -->
  <select id="selectLogisticsForOt" resultMap="BaseResultMap"  >
select * from logistics   
where from_warehouse_id!=0 and  to_warehouse_id!=0 and logistics.status=0
  </select>
  <!-- 找所有客户物流 -->
  <select id="selectLogisticsForOrders" resultMap="BaseResultMap"  >
   select logistics.*,orders.user_id
    from logistics,orders 
    where  logistics.order_id=orders.order_id and logistics.status=0
  </select>
  
 <!-- 分页 -->
  
  <!-- 分页查询所有LogOt -->
  <select id="selectLogisticsForOtPage" resultMap="BaseResultMap"  >
select * from logistics   
where from_warehouse_id!=0 and  to_warehouse_id!=0 and logistics.status=0
limit #{pageNo,jdbcType=INTEGER},#{pageSize,jdbcType=INTEGER}
  </select>
  <!-- 分页查询所有LogOt数量 -->
  <select id="getLogOtAllCount" resultType="java.lang.Integer">
  SELECT count(*) from logistics   
where from_warehouse_id!=0 and  to_warehouse_id!=0 and logistics.status=0

  </select>
  <!-- 分页查询所有LogPurchase数量 -->
  <select id="getLogPurchaseAllCount" resultType="java.lang.Integer">
  SELECT count(*) from logistics,purchase,goods WHERE logistics.purchase_id  = purchase.purchase_id and
goods.goods_id=purchase.goods_id  and logistics.status=0
  </select>
  <!-- 分页找所有采购物流 -->
  <select id="selectLogisticsForPurchasePage" resultMap="BaseResultMap"  >
    SELECT logistics.* ,goods_name,purchase_quantity from logistics,purchase,goods WHERE logistics.purchase_id  = purchase.purchase_id and
goods.goods_id=purchase.goods_id  and logistics.status=0
limit #{pageNo,jdbcType=INTEGER},#{pageSize,jdbcType=INTEGER}
  </select>
  
  <!-- 分页找所有客户物流 -->
  <select id="selectLogisticsForOrdersPage" resultMap="BaseResultMap"  >
   select logistics.*,orders.user_id
    from logistics,orders 
    where  logistics.order_id=orders.order_id and logistics.status=0
    limit #{pageNo,jdbcType=INTEGER},#{pageSize,jdbcType=INTEGER}
  </select>
  <!-- 分页查询所有LogOrders数量 -->
  <select id="getLogOrdersAllCount" resultType="java.lang.Integer">
  SELECT count(*) 
from logistics,orders 
    where  logistics.order_id=orders.order_id and logistics.status=0
  </select>
  <!-- 分页结束 -->
  
  <!-- 通过purchaseId找 -->
  <select id="selectLogisticsByPurchaseId" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from logistics
    where purchase_id = #{purchaseId,jdbcType=INTEGER}
  </select>
  
  <!-- 通过orderId找 -->
  <select id="selectLogisticsByOrderId" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from logistics
    where order_id = #{orderId,jdbcType=VARCHAR}
  </select>
  
</mapper>